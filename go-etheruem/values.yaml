# Default values for go-ethereum.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ethereum/client-go
  tag: v1.10.13
  pullPolicy: IfNotPresent

strategyType: Recreate

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

arguments:
  # Enable the --goerli argument to connect to the goerli testnet
  # - --goerli
  - --http
  - --http.addr
  - 0.0.0.0
  - --syncmode
  - full
  - --cache
  - 256
  - --maxpeers
  - 12
  - --datadir
  - /data

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true

  annotations: {}
  labels: {}
  ## Deprecated, instead simply do not provide a clusterIP value
  omitClusterIP: false
  # clusterIP: ""

  ## List of IP addresses at which the controller services are available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []

  loadBalancerIP: ""
  loadBalancerSourceRanges: []

  enableHttpRpc: true
  enableWsRpc: false
  enableNodeTcp: true
  enableUdpDiscovery: false

  ## Set external traffic policy to: "Local" to preserve source IP on
  ## providers supporting it
  ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
  externalTrafficPolicy: ""

  # Must be either "None" or "ClientIP" if set. Kubernetes will default to "None".
  # Ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  sessionAffinity: ""

  healthCheckNodePort: 0

  ports:
    httprpc: 8545
    wsrpc: 8546
    nodetcp: 30303
    udpdiscovery: 30303
    tcp: {}
    udp: {}

  targetPorts:
    httprpc: httprpc
    wsrpc: wsrpc
    nodetcp: nodetcp
    udpdiscovery: udpdiscovery

  type: NodePort

  # type: NodePort
  # nodePorts:
  #   httprpc: 8545
  #   wsrpc: 8546
  #   nodetcp: 30303
  #   udpdiscovery: 30301
  #   tcp: {}
  #   udp: {}
  nodePorts:
    httprpc: ""
    wsrpc: ""
    nodetcp: ""
    udpdiscovery: ""
    tcp: {}
    udp: {}

persistence:
  enabled: false
  ## go-ethereum data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  ##
  ## If you want to use a volume on the host machine instead of a PVC:
  # hostPath: /path/to/the/config/folder
  accessMode: ReadWriteOnce
  size: 5Gi

  tls: []
  #  - secretName: go-ethereum-tls
  #    hosts:
  #      - go-ethereum.local

# cookiePersistence will mount a persistent volume with the rpc cookie (.cookie). This is
# useful when using the nfs-client-provisioner and sharing this volume with other apps on the cluster.
cookiePersistence:
  enabled: false
  ## go-ethereum data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  ##
  ## If you want to use a volume on the host machine instead of a PVC:
  # hostPath: /path/to/the/config/folder
  accessMode: ReadWriteOnce
  size: 5Mi

  tls: []
  #  - secretName: go-ethereum-tls
  #    hosts:
  #      - go-ethereum.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
