{{- /*
  Iterate over .Values.backends and create a Deployment for each backend.
*/ -}}
{{- range $i, $backend := .Values.backends }}
{{- $root := $ }}
{{- $backendName := (printf "backend-%s" $backend.name) | default (printf "backend-%d" $i) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "mempool.fullname" $root }}-{{ $backendName }}
  labels:
    app: {{ template "mempool.name" $root }}-{{ $backendName }}
    chart: {{ template "mempool.chart" $root }}
    heritage: {{ $root.Release.Service }}
    {{ $backend.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: backend
    {{- if $backend.deploymentLabels }}
{{ toYaml $backend.deploymentLabels | indent 4 }}
    {{- end }}
spec:
  replicas: {{ $backend.replicaCount | default $.Values.replicaCount }}
  strategy:
    type: {{ $backend.strategyType | default "Recreate" }}
  selector:
    matchLabels:
      app: {{ template "mempool.name" $root }}-{{ $backendName }}
    {{- if $backend.useComponentLabel }}
      {{ $backend.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: backend
    {{- end }}
  template:
    metadata:
      {{- if or $backend.podAnnotations $backend.podAnnotationConfigChecksum }}
      annotations:
      {{- range $key, $value := $backend.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if $backend.podAnnotationConfigChecksum }}
        checksum/config: {{ tpl (toYaml $.Values) $root | sha256sum }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ template "mempool.name" $root }}-{{ $backendName }}
        component: "backend"
        {{ $backend.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: backend
        {{- if $backend.podLabels }}
{{ toYaml $backend.podLabels | indent 8 }}
        {{- end }}
    spec:
      {{- with $backend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "mempool.serviceAccountName" $root }}
      securityContext:
        {{- toYaml $backend.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 300
      containers:
        - name: backend
          securityContext:
            {{- toYaml $backend.securityContext | nindent 12 }}
          image: "{{ $backend.image.repository }}:{{ $backend.image.tag }}"
          imagePullPolicy: {{ $backend.image.pullPolicy }}
          command:
            - "./wait-for-it.sh"
            - "{{ template "mempool.fullname" $root }}-mariadb:3306"
            - "--timeout=720"
            - "--strict"
            - "--"
            - "./start.sh"
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "pkill -SIGINT node; while ps | grep node; do sleep 1; done"]
          args:
            {{- range $backend.arguments }}
            - {{ . }}
            {{- end }}
          env:
            {{- if $backend.coreRpcHost }}
            - name: "CORE_RPC_HOST"
              value: "{{ $backend.coreRpcHost }}"
            {{- end }}
            {{- if $backend.coreRpcPort }}
            - name: "CORE_RPC_PORT"
              value: "{{ $backend.coreRpcPort }}"
            {{- end }}
            {{- if $backend.coreRpcUsername }}
            - name: "CORE_RPC_USERNAME"
              value: "{{ $backend.coreRpcUsername }}"
            {{- end }}
            {{- if $backend.coreRpcPassword }}
            - name: "CORE_RPC_PASSWORD"
              value: "{{ $backend.coreRpcPassword }}"
            {{- end }}
            - name: "DATABASE_ENABLED"
              value: "true"
            - name: "DATABASE_HOST"
              value: "{{ template "mempool.fullname" $root }}-mariadb"
            - name: "DATABASE_DATABASE"
              value: "{{ $backend.name }}"
            - name: "DATABASE_USERNAME"
              value: "{{ $.Values.mariadb.auth.username }}"
            - name: "DATABASE_PASSWORD"
              value: "{{ $.Values.mariadb.auth.password }}"
            - name: "STATISTICS_ENABLED"
              value: "{{ $backend.statisticsEnabled }}"
            - name: "MEMPOOL_BACKEND"
              value: "{{ $backend.mempoolBackend.type }}"
            {{- if eq $backend.mempoolBackend.type "electrum" }}
            - name: "ELECTRUM_HOST"
              value: "{{ $backend.mempoolBackend.electrum.host }}"
            - name: "ELECTRUM_PORT"
              value: "{{ $backend.mempoolBackend.electrum.port }}"
            - name: "ELECTRUM_TLS_ENABLED"
              value: "{{ $backend.mempoolBackend.electrum.tls }}"
            {{- end }}
            {{- range $key, $val := $backend.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- if $backend.envExternalSecretName }}
          envFrom:
            - secretRef:
                name: {{ $backend.envExternalSecretName }}
          {{- end }}
          ports:
            - name: "tcp"
              containerPort: {{ $backend.service.tcpPort }}
              protocol: TCP
          resources:
            {{- toYaml $backend.resources | nindent 12 }}
      {{- with $backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}