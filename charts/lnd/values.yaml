# Default values for bitcoind.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: lightninglabs/lnd
  # tag: 
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

command:
  - lnd
# Ports that are exposed to other pods in your cluster
service:
  type: ClusterIP
  rpcPort: 10009
  restPort: 8080
  prometheusPort: 8989
  p2pPort: 9735

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
    
ingress:
  rest:
    enabled: false
    # annotations:
    #   kubernetes.io/ingress.class: nginx
    #   cert-manager.io/cluster-issuer: letsencrypt-prod
    #   nginx.ingress.kubernetes.io/enable-cors: "true"
    #   nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # hosts:
    #   - host: lnd.example.com
    #     paths:
    #       - path: /
    #         port: 8080
    # tls:
    #   - hosts:
    #       - lnd.example.com
    #     secretName: lnd-tls-secret
  rpc:
    enabled: false
    # annotations:
    #   kubernetes.io/ingress.class: nginx
    #   cert-manager.io/cluster-issuer: letsencrypt-prod
    #   nginx.ingress.kubernetes.io/enable-cors: "true"
    #   nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
    # hosts:
    #   - host: rpc.lnd.example.com
    #     paths:
    #       - path: /
    #         port: 10009
    # tls:
    #   - hosts:
    #       - rpc.lnd.example.com
    #     secretName: lnd-rpc-tls-secret

persistence:
  enabled: false
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 5Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 100m
  limits:
    memory: 512Mi

# The network lnd is running on
network: testnet
# network: mainnet

# Custom lnd configuration file used to override default lnd settings
configurationFile:
  lnd.conf: |-
    bitcoin.active=1
    bitcoin.mainnet=0
    bitcoin.testnet=1
    debuglevel=info
    bitcoin.node=neutrino
    neutrino.addpeer=faucet.lightning.community
    neutrino.addpeer=lnd.bitrefill.com:18333
    rpclisten=0.0.0.0:10009
    tlsextradomain=nodes-lnd-internal.nodes
    tlsextradomain=lnd.example.com
    tlsextraip=0.0.0.0
    protocol.wumbo-channels=1
    prometheus.enable=false
    prometheus.listen=0.0.0.0:8989
#    wallet-unlock-password-file=/passwords/wallet_password
# extraConfig:
#   secretName: lnd-secret-config
#   secretKey: extra.conf
autoUnlock: false
autoUnlockPassword: password

extraManifests: []
# extraManifests:
#  - apiVersion: traefik.containo.us/v1alpha1
#    kind: IngressRouteTCP
#    metadata:
#      labels:
#        {{- include "lnd.labels" . | nindent 4 }}
#      name: {{ template "lnd.fullname" . }}
#      annotations:
#        traefik.ingress.kubernetes.io/router.tls.options: foobar@file
#    spec:
#      entryPoints:
#      # Ensure that you have an entrypoint configured for traefik, like this:
#      #  additionalArguments:
#      #  - "--entrypoints.lnd-8080.address=:8080"
#      - lnd-3002
#      routes:
#      - match: HostSNI(`*`)
#        services:
#        - name: {{ include "lnd.fullname" . }}
#          port: 8080