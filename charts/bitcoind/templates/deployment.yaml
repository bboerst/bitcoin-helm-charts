apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "bitcoind.name" . }}
    chart: {{ template "bitcoind.chart" . }}
    heritage: {{ .Release.Service }}
    {{ .Values.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: bitcoind
    {{- if .Values.deploymentLabels }}
    {{- toYaml .Values.deploymentLabels | nindent 4 }}
    {{- end }}
  name: {{ template "bitcoind.fullname" . }}
spec:
  serviceName: {{ template "bitcoind.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "bitcoind.name" . }}
    {{- if .Values.useComponentLabel }}
      {{ .Values.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: bitcoind
    {{- end }}
  template:
    metadata:
      {{- if or .Values.podAnnotations .Values.podAnnotationConfigChecksum }}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.podAnnotationConfigChecksum }}
        checksum/config: {{ tpl (toYaml .Values) . | sha256sum }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ template "bitcoind.name" . }}
        component: "{{ .Values.name }}"
        {{ .Values.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: bitcoind
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "bitcoind.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 300
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- if .Values.configExternalSecretName }}
            - -conf=/config/bitcoin.conf
            {{- end }}
            {{- range .Values.arguments }}
            - {{ . }}
            {{- end }}
          env:
          {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
            {{- if .Values.service.enableRpc }}
            - name: rpc
              containerPort: {{ .Values.service.ports.rpc }}
              protocol: TCP
            {{- end }}
            {{- if .Values.service.enableP2p }}
            - name: p2p
              containerPort: {{ .Values.service.ports.p2p }}
              protocol: TCP
            {{- end }}
            {{- if .Values.service.ports.tcp }}
            {{- range $port := .Values.service.ports.tcp }}
            - name: "{{ $port }}-tcp"
              containerPort: {{ $port }}
              protocol: TCP
            {{- end }}
            {{- else }}
            # Default fallback
            - name: tcp-default
              containerPort: 8333
              protocol: TCP
            {{- end }}
            {{- range $port := .Values.service.ports.udp }}
            - name: "{{ $port }}-udp"
              containerPort: {{ $port }}
              protocol: UDP
            {{- end }}
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - grep -r bitcoind /proc/1/cmdline
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - grep -r bitcoind /proc/1/cmdline
            initialDelaySeconds: 10
            periodSeconds: 30
          volumeMounts:
            - mountPath: /data/.bitcoin/
              name: data
            {{- if .Values.configExternalSecretName }}
            - mountPath: /config
              name: config-secret
              readOnly: true
            {{- end }}
            {{- if .Values.cookiePersistence.enabled }}
            - mountPath: /authcookie/
              name: authcookie
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.configExternalSecretName }}
        - name: config-secret
          secret:
            secretName: {{ .Values.configExternalSecretName }}
      {{- end }}
      {{- if .Values.persistence.enabled }}
      {{- if .Values.persistence.hostPath }}
        - name: data
          hostPath:
            path: {{ .Values.persistence.hostPath }}
            type: DirectoryOrCreate
      {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      {{- range .Values.persistence.accessModes }}
      - {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass }}
      {{- end }}
  {{- end }}
  {{- if .Values.cookiePersistence.enabled }}
  - metadata:
      name: authcookie
    spec:
      accessModes:
      {{- range .Values.persistence.accessModes }}
      - {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.cookiePersistence.size }}
      {{- if .Values.cookiePersistence.storageClass }}
      storageClassName: {{ .Values.cookiePersistence.storageClass }}
      {{- end }}
  {{- end }}
  {{- end }}
