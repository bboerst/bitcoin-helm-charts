apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "mempool.name" . }}-backend
    chart: {{ template "mempool.chart" . }}
    heritage: {{ .Release.Service }}
    {{ .Values.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: backend

    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
  name: {{ template "mempool.fullname" . }}-backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  strategy:
    type: {{ .Values.backend.strategyType }}
  selector:
    matchLabels:
      app: {{ template "mempool.name" . }}-backend
    {{- if .Values.backend.useComponentLabel }}
      {{ .Values.backend.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: backend
    {{- end }}
  template:
    metadata:
      {{- if or .Values.backend.podAnnotations .Values.backend.podAnnotationConfigChecksum }}
      annotations:
      {{- range $key, $value := .Values.backend.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.backend.podAnnotationConfigChecksum }}
        checksum/config: {{ tpl (toYaml .Values) . | sha256sum }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ template "mempool.name" . }}-backend
        component: "backend"
        {{ .Values.backend.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: backend
        {{- if .Values.backend.podLabels }}
{{ toYaml .Values.backend.podLabels | indent 8 }}
        {{- end }}
    spec:
    {{- with .Values.backend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "mempool.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 300
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          command:
            - "./wait-for-it.sh"
            - "{{ template "mempool.name" . }}-mariadb:3306"
            - "--timeout=720"
            - "--strict"
            - "--"
            - "./start.sh"
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "pkill -SIGINT node; while ps | grep node; do sleep 1; done"]
          args:
          {{ range .Values.backend.arguments }}
            - {{ . }}
          {{ end }}
          env:
            - name: "CORE_RPC_HOST"
              value: "{{ .Values.backend.coreRpcHost }}"
            - name: "CORE_RPC_PORT"
              value: "{{ .Values.backend.coreRpcPort }}"
            - name: "CORE_RPC_USERNAME"
              value: "{{ .Values.backend.coreRpcUsername }}"
            - name: "CORE_RPC_PASSWORD"
              value: "{{ .Values.backend.coreRpcPassword }}"
            - name: "DATABASE_ENABLED"
              value: "true"
            - name: "DATABASE_HOST"
              value: "{{ template "mempool.name" . }}-mariadb"
            - name: "DATABASE_DATABASE"
              value: "{{ .Values.mariadb.auth.database }}"
            - name: "DATABASE_USERNAME"
              value: "{{ .Values.mariadb.auth.username }}"
            - name: "DATABASE_PASSWORD"
              value: "{{ .Values.mariadb.auth.password }}"
            - name: "STATISTICS_ENABLED"
              value: "{{ .Values.backend.statisticsEnabled }}"
            - name: "MEMPOOL_BACKEND"
              value: "{{ .Values.backend.mempoolBackend.type }}"
            {{- if eq .Values.backend.mempoolBackend.type "electrum" }}
            - name: "ELECTRUM_HOST"
              value: "{{ .Values.backend.mempoolBackend.electrum.host }}"
            - name: "ELECTRUM_PORT"
              value: "{{ .Values.backend.mempoolBackend.electrum.port }}"
            - name: "ELECTRUM_TLS_ENABLED"
              value: "{{ .Values.backend.mempoolBackend.electrum.tls }}"
            {{- end }}
            {{- range $key, $val := .Values.backend.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: "tcp"
              containerPort: {{ .Values.backend.service.tcpPort }}
              protocol: TCP
          # livenessProbe:
          #   exec:
          #     command:
          #     - sh
          #     - -c
          #     - grep -r mempool /proc/1/cmdline
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          # readinessProbe:
          #   exec:
          #     command:
          #     - sh
          #     - -c
          #     - grep -r mempool /proc/1/cmdline
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          # volumeMounts:
          # - mountPath: /data/.bitcoin/
          #   name: data
          # - mountPath: /authcookie/
          #   name: authcookie
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      # volumes:
      # - name: data
      # {{- if .Values.backend.persistence.enabled }}
      #   {{- if .Values.backend.persistence.hostPath }}
      #   hostPath:
      #     path: {{.Values.backend.persistence.hostPath}}
      #     type: Directory
      #   {{- else }}
      #   persistentVolumeClaim:
      #     claimName: {{ if .Values.backend.persistence.existingClaim }}{{ .Values.backend.persistence.existingClaim }}{{- else }}{{ template "mempool.fullname" . }}{{- end }}
      #   {{- end }}
      # {{- else }}
      #   emptyDir: {}
      # {{ end }}
