# Default values for dydx-liquidadtor
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: bboerst/dydxliquidator
  tag: latest
  pullPolicy: IfNotPresent

strategyType: Recreate

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

secretName: dydx-liquidator

walletAddress: "0x2Ef2fb71C67e4602818Ef4E8120A9CeE95f91AcD"
ethereumNodeUrl: "http://10.1.40.200:8545"
soloLiquidationsEnabled: "true"
perpLiquidationsEnabled: "false"
soloExpirationsEnabled: "true"
accountPollIntervalMs: "5000"
marketPollIntervalMs: "5000"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer

persistence:
  enabled: false
  ## dydx-liquidator data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  ##
  ## If you want to use a volume on the host machine instead of a PVC:
  # hostPath: /path/to/the/config/folder
  accessMode: ReadWriteOnce
  size: 5Gi

  tls: []
  #  - secretName: dydx-liquidator-tls
  #    hosts:
  #      - dydx-liquidator.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
